{"mappings":"YAAA,IAAMA,EAAUC,SAASC,cAAc,QACnCC,EAAaF,SAASC,cAAc,kBACpCE,EAAOH,SAASC,cAAc,iBAC9BG,EAASJ,SAASC,cAAc,mBACpCI,QAAQC,IAAIJ,GACZG,QAAQC,IAAIH,GACZE,QAAQC,IAAIF,GAEZL,EAAQQ,iBAAiB,UAEzB,SAAkBC,GAChBA,EAAMC,iBAKAC,EAAgBC,KAAKC,SAAW,GAChCC,EAA6B,IAAnBX,EAAWY,MAC3BT,QAAQC,IAAIO,GACL,IAAIE,SAAQ,SAACC,EAASC,GAE3BC,YAAW,WACLR,EAGFM,EAAQG,EAASC,EAAMf,QAAQC,IAAI,YAInCW,EAAOE,EAAUC,KAEnBP,MAhBN,IAAuBM,EAAUC,EACzBV,EACAG,K","sources":["src/js/03-promises.js"],"sourcesContent":["const formRef = document.querySelector('form');\nlet firstDelay = document.querySelector('[name=\"delay\"]');\nlet step = document.querySelector('[name=\"step\"]');\nlet amount = document.querySelector('[name=\"amount\"]');\nconsole.log(firstDelay);\nconsole.log(step);\nconsole.log(amount);\n\nformRef.addEventListener('submit', onSubmit)\n\nfunction onSubmit(event) {\n  event.preventDefault()\n  createPromise()\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const timeout = firstDelay.value * 1000;\n  console.log(timeout);\n  return new Promise((resolve, reject) => {\n    // Asynchronous operation\n    setTimeout(()=>{\n      if (shouldResolve) {\n        // Fulfill\n        ;\n        resolve(position,delay,console.log('success'))\n        ;\n      } else {\n        // Reject\n        reject(position, delay)\n      }\n    },timeout)\n    \n  });\n  \n}\n\n\n\n"],"names":["$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","console","log","addEventListener","event","preventDefault","shouldResolve","Math","random","timeout","value","Promise","resolve","reject","setTimeout","position","delay"],"version":3,"file":"03-promises.e7846e9f.js.map"}